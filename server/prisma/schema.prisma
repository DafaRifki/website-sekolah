// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(SISWA)

  guruId Int?  @unique
  guru   Guru? @relation(fields: [guruId], references: [id_guru])

  siswaId Int?   @unique
  siswa   Siswa? @relation(fields: [siswaId], references: [id_siswa])
}

model Guru {
  id_guru      Int     @id @default(autoincrement())
  nip          String  @unique
  nama         String
  jenisKelamin String?
  alamat       String?
  noHP         String
  email        String?
  jabatan      String?
  fotoProfil   String?
  user         User?

  waliKelas Kelas[]
}

model Siswa {
  id_siswa     Int       @id @default(autoincrement())
  nis          String?   @unique
  nama         String
  alamat       String?
  tanggalLahir DateTime?
  jenisKelamin String?
  fotoProfil   String?
  user         User?

  kelasId Int?
  kelas   Kelas? @relation(fields: [kelasId], references: [id_kelas])

  nilaiRapor     NilaiRapor[]
  Siswa_Orangtua Siswa_Orangtua[]
  absensi        Absensi[]

  // opsional: link ke data pendaftaran awal
  pendaftaran Pendaftaran[]
}

model OrangTua {
  id_orangtua Int    @id @default(autoincrement())
  nama        String
  hubungan    String
  pekerjaan   String
  alamat      String
  noHp        String

  siswa Siswa_Orangtua[]
}

model Siswa_Orangtua {
  id_siswa    Int
  id_orangtua Int
  status      String

  siswa    Siswa    @relation(fields: [id_siswa], references: [id_siswa])
  orangtua OrangTua @relation(fields: [id_orangtua], references: [id_orangtua])

  @@id([id_siswa, id_orangtua])
}

model Kelas {
  id_kelas  Int                @id @default(autoincrement())
  namaKelas String
  tingkat   String
  waliId    Int?
  guru      Guru?              @relation(fields: [waliId], references: [id_guru])
  siswa     Siswa[]
  tahunRel  KelasTahunAjaran[] // pivot ke tahun ajaran
}

model KelasTahunAjaran {
  id_kelas_tahun Int     @id @default(autoincrement())
  kelasId        Int
  tahunAjaranId  Int
  isActive       Boolean @default(false)

  kelas       Kelas       @relation(fields: [kelasId], references: [id_kelas])
  tahunAjaran TahunAjaran @relation(fields: [tahunAjaranId], references: [id_tahun])

  @@unique([kelasId, tahunAjaranId])
}

model MataPelajaran {
  id_mapel      Int          @id @default(autoincrement())
  namaMapel     String
  kelompokMapel String?
  nilai         NilaiRapor[]
}

model NilaiRapor {
  id_nilai Int    @id @default(autoincrement())
  id_siswa Int
  id_mapel Int
  semester String
  nilai    Int

  siswa Siswa         @relation(fields: [id_siswa], references: [id_siswa])
  mapel MataPelajaran @relation(fields: [id_mapel], references: [id_mapel])
}

model TahunAjaran {
  id_tahun  Int                @id @default(autoincrement())
  namaTahun String
  absensi   Absensi[]
  kelasRel  KelasTahunAjaran[]
  tarif     TarifPembayaran[] // setiap tahun ajaran bisa punya tarif berbeda
  daftar    Pendaftaran[] // pendaftaran siswa baru terkait tahun ajaran
}

model Absensi {
  id_absensi Int           @id @default(autoincrement())
  tanggal    DateTime      @default(now())
  status     StatusAbsensi
  keterangan String?

  id_siswa Int
  id_tahun Int

  siswa       Siswa       @relation(fields: [id_siswa], references: [id_siswa])
  tahunAjaran TahunAjaran @relation(fields: [id_tahun], references: [id_tahun])
}

model Pendaftaran {
  id_pendaftaran   Int              @id @default(autoincrement())
  nama             String
  alamat           String?
  tanggalLahir     DateTime?
  jenisKelamin     String?
  noHp             String?
  email            String?
  statusDokumen    StatusDokumen    @default(BELUM_DITERIMA)
  statusPembayaran StatusPembayaran @default(BELUM_BAYAR)

  tahunAjaranId Int
  tahunAjaran   TahunAjaran @relation(fields: [tahunAjaranId], references: [id_tahun])

  siswaId Int?
  siswa   Siswa? @relation(fields: [siswaId], references: [id_siswa])
}

model TarifPembayaran {
  id_tarif      Int     @id @default(autoincrement())
  tahunAjaranId Int
  nominal       Int // contoh: 5000000
  keterangan    String?

  tahunAjaran TahunAjaran @relation(fields: [tahunAjaranId], references: [id_tahun])
}

enum Role {
  ADMIN
  GURU
  SISWA
}

enum StatusAbsensi {
  HADIR
  SAKIT
  IZIN
  TIDAK_HADIR
}

enum StatusDokumen {
  BELUM_DITERIMA
  LENGKAP
  KURANG
}

enum StatusPembayaran {
  BELUM_BAYAR
  LUNAS
  CICIL
}
